{"title":"Spring框架入门2. Spring IoC容器","date":"2019-12-20T03:41:02.000Z","date_formatted":{"ll":"2019年12月20日","L":"2019/12/20","MM-DD":"12-20"},"color":"#EBF8FF","link":"articles/865c5d02","comments":true,"tags":["Java","Spring"],"categories":["Spring框架入门"],"updated":"2019-12-23T05:07:48.797Z","content":"<h1 id=\"Spring框架入门2-Spring-IoC容器\">Spring框架入门2. Spring IoC容器<a href=\"articles/865c5d02#Spring框架入门2-Spring-IoC容器\"></a></h1><h2 id=\"控制反转\">控制反转<a href=\"articles/865c5d02#控制反转\"></a></h2><p><strong>控制反转</strong>（Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则，可以用来减低计算机代码之间的耦合度。其中最常见的方式叫做依赖注入（Dependency Injection，简称DI）。</p>\n<p>通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递（注入）给它。</p>\n<h2 id=\"IoC容器\">IoC容器<a href=\"articles/865c5d02#IoC容器\"></a></h2><p>Spring 容器是 Spring 框架的核心。容器将创建对象，把它们连接在一起，配置它们，并管理他们的整个生命周期从创建到销毁。Spring 容器使用依赖注入（DI）来管理组成一个应用程序的组件。这些对象被称为 Spring Beans。</p>\n<p>通过阅读配置元数据提供的指令，容器知道对哪些对象进行实例化，配置和组装。配置元数据可以通过 XML，Java 注解或 Java 代码来表示。下图是 Spring 如何工作的高级视图。 Spring IoC 容器利用 Java 的 POJO 类和配置元数据来生成完全配置和可执行的系统或应用程序。</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/20/QOnMss.png\" alt=\"IoC容器\" class=\"article-img\"></p>\n<p><strong>IoC 容器</strong>是具有依赖注入功能的容器，Spring 提供了以下两种不同类型的容器。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>容器</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BeanFactory</td>\n<td>该容器提供了框架和基本功能的配置</td>\n</tr>\n<tr>\n<td>ApplicationContext</td>\n<td>该容器添加了更多的企业特定的功能</td>\n</tr>\n</tbody></table></div></div>\n<h3 id=\"BeanFactory\">BeanFactory<a href=\"articles/865c5d02#BeanFactory\"></a></h3><p><code>BeanFactory</code> 是一个最简单的容器，它主要的功能是为依赖注入（DI）提供支持，这个容器接口在 <code>org.springframework.beans.factory.BeanFactor</code> 中被定义。<code>BeanFactory</code> 和相关的接口，比如 <code>BeanFactoryAware</code>、<code>DisposableBean</code>、<code>InitializingBean</code>，仍旧保留在 Spring 中，主要目的是向后兼容已经存在的和那些 Spring 整合在一起的第三方框架。</p>\n<p>在 Spring 中，有大量对 <code>BeanFactory</code> 接口的实现。其中，最常被使用的是 <code>XmlBeanFactory</code> 类。这个容器从一个 XML 文件中读取配置元数据，由这些元数据来生成一个被配置化的系统或者应用。</p>\n<p>在资源宝贵的移动设备或者基于 applet 的应用程序中，优先选择 <code>BeanFactory</code>。否则，一般使用的是 <code>ApplicationContext</code>。</p>\n<h3 id=\"ApplicationContext\">ApplicationContext<a href=\"articles/865c5d02#ApplicationContext\"></a></h3><p><code>ApplicationContext</code> 是 <code>BeanFactory</code> 的子接口，也被成为 Spring 上下文。</p>\n<p><code>ApplicationContext</code> 是 Spring 中较高级的容器。和 <code>BeanFactory</code> 类似，它可以加载配置文件中定义的 bean，将所有的 bean 集中在一起，当有请求的时候分配 bean。另外，它增加了企业特定的功能，比如，从属性文件中解析文本信息和将事件传递给所指定的监听器。这个容器接口在 <code>org.springframework.context.ApplicationContext</code> 接口中被定义。</p>\n<p><code>ApplicationContext</code> 包含 <code>BeanFactory</code> 所有的功能，一般情况下，相对于 <code>BeanFactory</code>，<code>ApplicationContext</code> 会更加优秀。当然，<code>BeanFactory</code> 仍可以在轻量级应用中使用，比如移动设备或者基于 applet 的应用程序。</p>\n<p><code>ApplicationContext</code> 接口最常被使用的实现类：</p>\n<ul>\n<li><code>ClassPathXmlApplicationContext</code>：该容器从类路径下的配置文件中加载已被定义的 bean。使用该容器不需要提供配置文件的完整路径，只需正确配置 CLASSPATH 环境变量即可。</li>\n<li><code>FileSystemXmlApplicationContext</code>：该容器从磁盘任意路径下的配置文件中加载已被定义的 bean。使用该容器需要注意路径必须要有访问权限。</li>\n<li><code>WebXmlApplicationContext</code>：该容器会在一个 Web 应用程序的范围内加载在配置文件中已被定义的 bean。</li>\n<li><code>AnnotationConfigApplicationContext</code>：它是用于读取注解创建容器的。</li>\n</ul>\n<h3 id=\"BeanFactory-和-ApplicationContext-的区别\">BeanFactory 和 ApplicationContext 的区别<a href=\"articles/865c5d02#BeanFactory-和-ApplicationContext-的区别\"></a></h3><ul>\n<li><p><code>BeanFactory</code> 才是 Spring 容器中的顶层接口。<code>ApplicationContext</code> 是它的子接口。</p>\n</li>\n<li><p>创建对象的时间点不一样：</p>\n<ul>\n<li><code>ApplicationContext</code>：它在构建核心容器时，创建对象采取的策略是采用立即加载的方式。也就是说，只要一读取完配置文件马上就创建配置文件中配置的对象。</li>\n<li><code>BeanFactory</code>：它在构建核心容器时，创建对象采取的策略是采用延迟加载的方式。也就是说，什么时候根据 id 获取对象了，什么时候才真正的创建对象。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"基于-XML-的-IoC-环境搭建\">基于 XML 的 IoC 环境搭建<a href=\"articles/865c5d02#基于-XML-的-IoC-环境搭建\"></a></h2><ol>\n<li><p>Maven pom.xml 配置</p>\n<figure class=\"highlight\"><figcaption><span>pom.xml</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.ydx<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-learn<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.2.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br><span class=\"line\">  </span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>编写程序代码</p>\n<ul>\n<li><p>编写 dao 层接口及其实现类</p>\n<figure class=\"highlight\"><figcaption><span>AccountDao.java</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ydx.dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 账户的持久层接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AccountDao</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 模拟保存账户</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveAccount</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><figcaption><span>AccountDaoImpl.java</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ydx.dao.impl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ydx.dao.AccountDao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 账户的持久层实现类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AccountDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">AccountDao</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">AccountDaoImpl</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AccountDaoImpl对象创建了\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveAccount</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"保存了账户\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>编写 service 层接口及其实现类</p>\n<figure class=\"highlight\"><figcaption><span>AccountService.java</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ydx.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 账户业务层的接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AccountService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 模拟保存账户</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveAccount</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><figcaption><span>AccountServiceImpl.java</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ydx.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ydx.dao.AccountDao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ydx.service.AccountService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 账户的业务层实现类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AccountServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">AccountService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AccountDao accountDao ;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">AccountServiceImpl</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AccountServiceImpl对象创建了\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span>  <span class=\"title\">saveAccount</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        accountDao.saveAccount();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n<li><p>resourse 目录下新建 applicationContext.xml</p>\n<figure class=\"highlight\"><figcaption><span>applicationContext.xml</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                https://www.springframework.org/schema/beans/spring-beans.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--把对象的创建交给Spring来管理--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"accountService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.ydx.service.impl.AccountServiceImpl\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"accountDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.ydx.dao.impl.AccountDaoImpl\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">  </span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<p>id 属性是标识单个 bean 定义的字符串。<br>class 属性使用全限定类名定义 bean 的类型。</p>\n</blockquote>\n</li>\n<li><p>编写测试类，调用 service 接口</p>\n<figure class=\"highlight\"><figcaption><span>BaseTest.java</span></figcaption><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ydx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ydx.dao.AccountDao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ydx.service.AccountService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取Spring的IoC核心容器，并根据id获取对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1 获取核心容器对象</span></span><br><span class=\"line\">        ApplicationContext ac = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2 根据id获取bean对象</span></span><br><span class=\"line\">        AccountService as = (AccountService) ac.getBean(<span class=\"string\">\"accountService\"</span>);</span><br><span class=\"line\">        AccountDao ad = ac.getBean(<span class=\"string\">\"accountDao\"</span>, AccountDao.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(as);</span><br><span class=\"line\">        System.out.println(ad);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<p>这里使用了 <code>getBean()</code> 方法的两种用法，<code>getBean(String name)</code> 和 <code>getBean(String name, Class requiredType)</code></p>\n</blockquote>\n<p>运行结果：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AccountServiceImpl对象创建了</span><br><span class=\"line\">AccountDaoImpl对象创建了</span><br><span class=\"line\">com.ydx.service.impl.AccountServiceImpl@57baeedf</span><br><span class=\"line\">com.ydx.dao.impl.AccountDaoImpl@343f4d3d</span><br></pre></td></tr></table></div></figure>\n</li>\n</ol>\n","prev":{"title":"Spring框架入门3. Spring Bean","link":"articles/9cc8ab67"},"next":{"title":"设计模式8 代理模式","link":"articles/426b71cf"},"plink":"http://alpac.top/articles/865c5d02/","toc":[{"title":"Spring框架入门2. Spring IoC容器","id":"Spring框架入门2-Spring-IoC容器","index":"1","children":[{"title":"控制反转","id":"控制反转","index":"1.1"},{"title":"IoC容器","id":"IoC容器","index":"1.2","children":[{"title":"BeanFactory","id":"BeanFactory","index":"1.2.1"},{"title":"ApplicationContext","id":"ApplicationContext","index":"1.2.2"},{"title":"BeanFactory 和 ApplicationContext 的区别","id":"BeanFactory-和-ApplicationContext-的区别","index":"1.2.3"}]},{"title":"基于 XML 的 IoC 环境搭建","id":"基于-XML-的-IoC-环境搭建","index":"1.3"}]}],"reward":true,"copyright":{"author":"Yang Dexuan","link":"<a href=\"http://alpac.top/articles/865c5d02/\" title=\"Spring框架入门2. Spring IoC容器\">http://alpac.top/articles/865c5d02/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}