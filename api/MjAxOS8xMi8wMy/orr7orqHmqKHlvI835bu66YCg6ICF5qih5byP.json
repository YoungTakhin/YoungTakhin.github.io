{"title":"设计模式7 建造者模式","date":"2019-12-03T06:34:02.000Z","date_formatted":{"ll":"2019年12月3日","L":"2019/12/03","MM-DD":"12-03"},"link":"2019/12/03/设计模式7建造者模式","comments":true,"tags":["设计模式"],"categories":["设计模式"],"updated":"2019-12-03T07:25:15.809Z","content":"<h1 id=\"设计模式7-建造者模式\">设计模式7 建造者模式<a href=\"2019/12/03/设计模式7建造者模式#设计模式7-建造者模式\"></a></h1><p>建造者模式(Builder Pattern)，也称为生成器模式，属于对象创建型模式。</p>\n<h2 id=\"建造者模式定义\">建造者模式定义<a href=\"2019/12/03/设计模式7建造者模式#建造者模式定义\"></a></h2><ul>\n<li><p>建造者模式：</p>\n<p>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p>\n<p>它是将一个复杂的对象分解为多个简单的对象，然后一步一步构建而成。它将变与不变相分离，即产品的组成部分是不变的，但每一部分是可以灵活选择的。</p>\n<p>建造者模式和工厂模式的关注点不同：建造者模式注重零部件的组装过程，而工厂方法模式更注重零部件的创建过程，但两者可以结合使用。</p>\n</li>\n<li><p>建造者模式优缺点：</p>\n<p>优点：</p>\n<ul>\n<li>客户端不必知道产品内部组成的细节，将产品本身与产品的创建过程解耦，使得相同的创建过程可以创建不同的产品对象。</li>\n<li>每一个具体建造者都相对独立，而与其他的具体建造者无关，因此可以很方便地替换或增加具体建造者，用户使用不同的具体建造者即可得到不同的产品对象。</li>\n<li>可以更加精细地控制产品的创建过程。将复杂产品的创建步骤分解在不同的方法中，使得创建过程更加清晰，也更方便使用程序来控制创建过程。</li>\n<li>增加新的具体建造者无须修改原有类库的代码，指挥者类针对抽象建造者类编程，系统扩展方便，符合“开闭原则”。</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。</li>\n<li>如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"建造者模式结构\">建造者模式结构<a href=\"2019/12/03/设计模式7建造者模式#建造者模式结构\"></a></h2><ul>\n<li><p>建造者模式主要包括以下主要角色：</p>\n<ul>\n<li>产品（Product）：它是包含多个组成部件的复杂对象，由具体建造者来创建其各个滅部件。</li>\n<li>抽象建造者（Builder）：它是一个包含创建产品各个子部件的抽象方法的接口，通常还包含一个返回复杂产品的方法 getResult()。</li>\n<li>具体建造者(Concrete Builder）：实现 Builder 接口，完成复杂产品的各个部件的具体创建方法。</li>\n<li>指挥者（Director）：它调用建造者对象中的部件构造与装配方法完成复杂对象的创建，在指挥者中不涉及具体产品的信息。</li>\n</ul>\n</li>\n<li><p>工厂方法模式类图：</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/03/QMZNnI.png\" alt=\"建造者模式\" class=\"article-img\"></p>\n</li>\n</ul>\n<h2 id=\"建造者模式实现方法\">建造者模式实现方法<a href=\"2019/12/03/设计模式7建造者模式#建造者模式实现方法\"></a></h2><p>抽象工厂模式的结构同工厂方法模式的结构相似，不同的是其产品的种类不止一个，所以创建产品的方法也不止一个。</p>\n<p>下面只给出抽象工厂和具体工厂的代码：</p>\n<ul>\n<li><p>产品类</p>\n<p>包含多个组成部件的复杂对象：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String partA;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String partB;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String partC;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPartA</span><span class=\"params\">(String partA)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.partA = partA;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPartB</span><span class=\"params\">(String partB)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.partB = partB;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPartC</span><span class=\"params\">(String partC)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.partC = partC;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//显示产品的特性</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>抽象建造者抽象类</p>\n<p>包含创建产品各个子部件的抽象方法：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Builder</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建产品对象</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Product product = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartA</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartB</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartC</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//返回产品对象</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">getResult</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> product;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>具体建造者</p>\n<p>继承了了抽象建造者抽象类：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteBuilder</span> <span class=\"keyword\">extends</span> <span class=\"title\">Builder</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartA</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        product.setPartA(<span class=\"string\">\"建造 PartA\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartB</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        product.setPartA(<span class=\"string\">\"建造 PartB\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">buildPartC</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        product.setPartA(<span class=\"string\">\"建造 PartC\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>指挥者</p>\n<p>调用建造者中的方法完成复杂对象的创建：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Director</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Builder builder;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Director</span><span class=\"params\">(Builder builder)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.builder = builder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//产品构建与组装方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        builder.buildPartA();</span><br><span class=\"line\">        builder.buildPartB();</span><br><span class=\"line\">        builder.buildPartC();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.getResult();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>访问类</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Builder builder = <span class=\"keyword\">new</span> ConcreteBuilder();</span><br><span class=\"line\">        Director director = <span class=\"keyword\">new</span> Director(builder);</span><br><span class=\"line\">        Product product = director.construct();</span><br><span class=\"line\">        product.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ul>\n<h2 id=\"建造者模式扩展\">建造者模式扩展<a href=\"2019/12/03/设计模式7建造者模式#建造者模式扩展\"></a></h2><p>建造者模式的简化：</p>\n<ul>\n<li>省略抽象建造者角色：如果系统中只需要一个具体建造者的话，可以省略掉抽象建造者。</li>\n<li>省略指挥者角色：在具体建造者只有一个的情况下，如果抽象建造者角色已经被省略掉，那么还可以省略指挥者角色，让 Builder 角色扮演指挥者与建造者双重角色。</li>\n</ul>\n","next":{"title":"设计模式6 抽象工厂模式","link":"2019/12/03/设计模式6抽象工厂模式"},"plink":"https://youngtakhin.github.io/youngtakhin.github.io/2019/12/03/设计模式7建造者模式/","toc":[{"title":"设计模式7 建造者模式","id":"设计模式7-建造者模式","index":"1","children":[{"title":"建造者模式定义","id":"建造者模式定义","index":"1.1"},{"title":"建造者模式结构","id":"建造者模式结构","index":"1.2"},{"title":"建造者模式实现方法","id":"建造者模式实现方法","index":"1.3"},{"title":"建造者模式扩展","id":"建造者模式扩展","index":"1.4"}]}],"reward":true,"copyright":{"author":"Yang Dexuan","link":"<a href=\"https://youngtakhin.github.io/youngtakhin.github.io/2019/12/03/设计模式7建造者模式/\" title=\"设计模式7 建造者模式\">https://youngtakhin.github.io/youngtakhin.github.io/2019/12/03/设计模式7建造者模式/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}