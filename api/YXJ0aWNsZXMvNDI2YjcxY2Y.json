{"title":"设计模式8 代理模式","date":"2019-12-05T08:27:00.000Z","date_formatted":{"ll":"2019年12月5日","L":"2019/12/05","MM-DD":"12-05"},"color":"#EBF8FF","link":"articles/426b71cf","comments":true,"tags":["设计模式"],"categories":["设计模式"],"updated":"2019-12-06T10:34:39.559Z","content":"<h1 id=\"设计模式8-代理模式\">设计模式8 代理模式<a href=\"articles/426b71cf#设计模式8-代理模式\"></a></h1><p>代理模式(Proxy Pattern 或 Surrogate Pattern)是一种对象结构型模式。</p>\n<h2 id=\"代理模式定义\">代理模式定义<a href=\"articles/426b71cf#代理模式定义\"></a></h2><ul>\n<li><p>代理模式：</p>\n<p>给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。</p>\n<ul>\n<li>代理模式和适配器模式的区别：适配器模式主要改变所考虑对象的接口，而代理模式不能改变所代理类的接口。</li>\n<li>和装饰器模式的区别：装饰器模式为了增强功能，而代理模式是为了加以控制。</li>\n</ul>\n</li>\n<li><p>代理模式优缺点：</p>\n<p>优点：</p>\n<ul>\n<li>代理模式在客户端与目标对象之间起到一个中介作用和保护目标对象的作用。</li>\n<li>代理对象可以扩展目标对象的功能。</li>\n<li>代理模式能将客户端与目标对象分离，在一定程度上降低了系统的耦合度。</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>客户端和目标对象之间增加了一个代理对象，请求处理速度变慢。</li>\n<li>实现代理模式需要额外的工作，有些代理模式的实现非常复杂，增加了系统的复杂度。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"代理模式结构\">代理模式结构<a href=\"articles/426b71cf#代理模式结构\"></a></h2><ul>\n<li><p>代理模式主要包括以下主要角色：</p>\n<ul>\n<li>抽象主题（Subject）类：通过接口或抽象类声明真实主题和代理对象实现的业务方法。</li>\n<li>真实主题（Real Subject）类：实现了抽象主题中的具体业务，是代理对象所代表的真实对象，是最终要引用的对象。</li>\n<li>代理（Proxy）类：提供了与真实主题相同的接口，其内部含有对真实主题的引用，它可以访问、控制或扩展真实主题的功能。</li>\n</ul>\n</li>\n<li><p>代理模式类图：</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/06/QJLyNQ.png\" alt=\"代理模式\" class=\"article-img\"></p>\n</li>\n</ul>\n<h2 id=\"代理模式实现方法\">代理模式实现方法<a href=\"articles/426b71cf#代理模式实现方法\"></a></h2><ul>\n<li><p>抽象主题接口</p>\n<p>声明真实主题和代理对象实现的业务方法：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Subject</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Request</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>真实主题类</p>\n<p>实现了抽象主题中的具体业务：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RealSubject</span> <span class=\"keyword\">implements</span> <span class=\"title\">Subject</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Request</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"访问真实主题方法...\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>代理类</p>\n<p>访问、控制或扩展真实主题的功能：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Proxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Subject</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> RealSubject realSubject;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Request</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (realSubject == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            realSubject = <span class=\"keyword\">new</span> RealSubject();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        preRequest();</span><br><span class=\"line\">        realSubject.Request();</span><br><span class=\"line\">        postRequest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preRequest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"访问真实主题之前的预处理。\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postRequest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"访问真实主题之后的后续处理。\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>访问类</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Proxy proxy = <span class=\"keyword\">new</span> Proxy();</span><br><span class=\"line\">        proxy.Request();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ul>\n<h2 id=\"代理模式扩展\">代理模式扩展<a href=\"articles/426b71cf#代理模式扩展\"></a></h2><p>动态代理模式：</p>\n<ul>\n<li><p>动态代理是一种较为高级的代理模式，它的典型应用就是Spring AOP。</p>\n</li>\n<li><p>在传统的代理模式中，客户端通过 Proxy 调用 RealSubject 类的 request() 方法，同时还在代理类中封装了其他方法（如 preRequest() 和 postRequest()），可以处理一些其他问题。</p>\n</li>\n<li><p>如果按照这种方法使用代理模式，那么真实主题角色必须是事先已经存在的，并将其作为代理对象的内部成员属性。如果一个真实主题角色必须对应一个代理主题角色，这将导致系统中的类个数急剧增加，因此需要想办法减少系统中类的个数，此外，如何在事先不知道真实主题角色的情况下使用代理主题角色，这都是动态代理需要解决的问题。</p>\n<p>动态代理模式如下图所示：</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/06/QYpypF.png\" alt=\"动态代理模式\" class=\"article-img\"></p>\n</li>\n</ul>\n","prev":{"title":"Spring框架入门二. Spring IoC容器","link":"articles/865c5d02"},"next":{"title":"设计模式7 建造者模式","link":"articles/4789"},"plink":"http://alpac.top/articles/426b71cf/","toc":[{"title":"设计模式8 代理模式","id":"设计模式8-代理模式","index":"1","children":[{"title":"代理模式定义","id":"代理模式定义","index":"1.1"},{"title":"代理模式结构","id":"代理模式结构","index":"1.2"},{"title":"代理模式实现方法","id":"代理模式实现方法","index":"1.3"},{"title":"代理模式扩展","id":"代理模式扩展","index":"1.4"}]}],"reward":true,"copyright":{"author":"Yang Dexuan","link":"<a href=\"http://alpac.top/articles/426b71cf/\" title=\"设计模式8 代理模式\">http://alpac.top/articles/426b71cf/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}