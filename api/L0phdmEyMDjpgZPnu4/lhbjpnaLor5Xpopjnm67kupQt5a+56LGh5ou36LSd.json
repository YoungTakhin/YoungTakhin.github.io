{"title":"Java208道经典面试题目五. 对象拷贝","date":"2019-09-27T03:40:08.000Z","date_formatted":{"ll":"2019年9月27日","L":"2019/09/27","MM-DD":"09-27"},"color":"#EBF8FF","link":"/Java208道经典面试题目五-对象拷贝","comments":true,"tags":["Java"],"categories":["Java208道经典面试题目"],"updated":"2019-12-03T11:04:16.054Z","content":"<h1 id=\"Java208道经典面试题目五-对象拷贝\">Java208道经典面试题目五. 对象拷贝<a href=\"/Java208道经典面试题目五-对象拷贝#Java208道经典面试题目五-对象拷贝\"></a></h1><h2 id=\"61-为什么要使用克隆？\">61. 为什么要使用克隆？<a href=\"/Java208道经典面试题目五-对象拷贝#61-为什么要使用克隆？\"></a></h2><p>想对一个对象进行处理，又想保留原有的数据进行接下来的操作，就需要克隆了，Java语言中克隆针对的是类的实例。</p>\n<h2 id=\"62-如何实现对象克隆？\">62. 如何实现对象克隆？<a href=\"/Java208道经典面试题目五-对象拷贝#62-如何实现对象克隆？\"></a></h2><p>有两种方式：</p>\n<p>1). 实现Cloneable接口并重写Object类中的clone()方法；</p>\n<p>2). 实现Serializable接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆，代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyUtil</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">MyUtil</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> AssertionError();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T extends Serializable&gt; <span class=\"function\">T <span class=\"title\">clone</span><span class=\"params\">(T obj)</span> </span></span><br><span class=\"line\"><span class=\"function\">                                  <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        ByteArrayOutputStream bout = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">        ObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(bout);</span><br><span class=\"line\">        oos.writeObject(obj);</span><br><span class=\"line\"></span><br><span class=\"line\">        ByteArrayInputStream bin = </span><br><span class=\"line\">                    <span class=\"keyword\">new</span> ByteArrayInputStream(bout.toByteArray());</span><br><span class=\"line\">        ObjectInputStream ois = <span class=\"keyword\">new</span> ObjectInputStream(bin);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) ois.readObject();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 说明：调用ByteArrayInputStream</span></span><br><span class=\"line\">        <span class=\"comment\">//或ByteArrayOutputStream对象的close方法没有任何意义</span></span><br><span class=\"line\">        <span class=\"comment\">// 这两个基于内存的流只要垃圾回收器清理对象就能够释放资源，</span></span><br><span class=\"line\">        <span class=\"comment\">//这一点不同于对外部资源（如文件流）的释放</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>下面是测试代码：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 人类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> nnngu</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID </span><br><span class=\"line\">                              = -<span class=\"number\">9102017020286042305L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;    <span class=\"comment\">// 姓名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;        <span class=\"comment\">// 年龄</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Car car;        <span class=\"comment\">// 座驾</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age, Car car)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.car = car;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Car <span class=\"title\">getCar</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> car;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCar</span><span class=\"params\">(Car car)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.car = car;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Person [name=\"</span> + name + <span class=\"string\">\",</span></span><br><span class=\"line\"><span class=\"string\">                       age=\"</span> + age + <span class=\"string\">\", car=\"</span> + car + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 小汽车类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> nnngu</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Car</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID </span><br><span class=\"line\">                                = -<span class=\"number\">5713945027627603702L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brand;       <span class=\"comment\">// 品牌</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> maxSpeed;       <span class=\"comment\">// 最高时速</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Car</span><span class=\"params\">(String brand, <span class=\"keyword\">int</span> maxSpeed)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.maxSpeed = maxSpeed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMaxSpeed</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxSpeed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMaxSpeed</span><span class=\"params\">(<span class=\"keyword\">int</span> maxSpeed)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.maxSpeed = maxSpeed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Car [brand=\"</span> + brand + <span class=\"string\">\", </span></span><br><span class=\"line\"><span class=\"string\">                      maxSpeed=\"</span> + maxSpeed + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CloneTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"郭靖\"</span>, <span class=\"number\">33</span>, </span><br><span class=\"line\">                              <span class=\"keyword\">new</span> Car(<span class=\"string\">\"Benz\"</span>, <span class=\"number\">300</span>));</span><br><span class=\"line\">            Person p2 = MyUtil.clone(p1);   <span class=\"comment\">// 深度克隆</span></span><br><span class=\"line\">            p2.getCar().setBrand(<span class=\"string\">\"BYD\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 修改克隆的Person对象p2关联的汽车对象的品牌属性</span></span><br><span class=\"line\">            <span class=\"comment\">// 原来的Person对象p1关联的汽车不会受到任何影响</span></span><br><span class=\"line\">            <span class=\"comment\">// 因为在克隆Person对象时其关联的汽车对象也被克隆了</span></span><br><span class=\"line\">            System.out.println(p1);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>注意</strong>：基于序列化和反序列化实现的克隆不仅仅是深度克隆，更重要的是通过泛型限定，可以检查出要克隆的对象是否支持序列化，这项检查是编译器完成的，不是在运行时抛出异常，这种是方案明显优于使用Object类的clone方法克隆对象。让问题在编译的时候暴露出来总是好过把问题留到运行时。</p>\n<h2 id=\"63-深拷贝和浅拷贝区别是什么？\">63. 深拷贝和浅拷贝区别是什么？<a href=\"/Java208道经典面试题目五-对象拷贝#63-深拷贝和浅拷贝区别是什么？\"></a></h2><ul>\n<li>浅拷贝只是复制了对象的引用地址，两个对象指向同一个内存地址，所以修改其中任意的值，另一个值都会随之变化，这就是浅拷贝（例：assign()）</li>\n<li>深拷贝是将对象及值复制过来，两个对象修改其中任意的值另一个值不会改变，这就是深拷贝（例：JSON.parse()和JSON.stringify()，但是此方法无法复制函数类型）</li>\n</ul>\n","prev":{"title":"Java208道经典面试题目六. Java Web","link":"/Java208道经典面试题目六-Java-Web"},"next":{"title":"Java208道经典面试题目四. 反射","link":"/Java208道经典面试题目四-反射"},"plink":"http://alpac.top//Java208道经典面试题目五-对象拷贝/","toc":[{"title":"Java208道经典面试题目五. 对象拷贝","id":"Java208道经典面试题目五-对象拷贝","index":"1","children":[{"title":"61. 为什么要使用克隆？","id":"61-为什么要使用克隆？","index":"1.1"},{"title":"62. 如何实现对象克隆？","id":"62-如何实现对象克隆？","index":"1.2"},{"title":"63. 深拷贝和浅拷贝区别是什么？","id":"63-深拷贝和浅拷贝区别是什么？","index":"1.3"}]}],"reward":true,"copyright":{"author":"Yang Dexuan","link":"<a href=\"http://alpac.top//Java208道经典面试题目五-对象拷贝/\" title=\"Java208道经典面试题目五. 对象拷贝\">http://alpac.top//Java208道经典面试题目五-对象拷贝/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}